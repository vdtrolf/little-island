/exists/{dbname}/{path}:
  get:
    tags:
      - data
    summary: Get existence of a path
    description: Gets the existence of a path in the database
    parameters:
      - name: dbname
        in: path
        description: name of the database
        required: true
        schema:
          type: string
          example: mydb
      - name: path
        in: path
        description: database path
        required: true
        schema:
          type: string
          example: collection/child/property
    responses:
      200:
        description: returns whether the target path exists in the database
        content:
          'application/json':
            schema:
              type: object
              properties:
                exists:
                  type: boolean
                  example: true
      403:
        description: Returns a "403 Forbidden" if the signed in user is not allowed to read from the target path
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Error'
      500:
        description: An unexpected error occurred
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UnexpectedError'
